services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      # - "6831:6831/udp"  # Accept jaeger.thrift in compact Thrift protocol
      # - "6832:6832/udp"  # Accept jaeger.thrift in binary Thrift protocol
      # - "5778:5778"      # Serve configs
      # - "16686:16686"    # Serve frontend
      # - "4317:4317"      # OTLP gRPC
      # - "4318:4318"      # OTLP HTTP
      # - "14250:14250"    # Accept model.proto
      # - "14268:14268"    # Accept jaeger.thrift directly from clients
      # - "14269:14269"    # Admin port
      # OTLP gRPC and HTTP ports
      # - "4317:4317"   # OTLP gRPC (primary protocol for OTLPSpanExporter)
      - "4318:4318"   # OTLP HTTP

      # Standard Jaeger ports (can keep for compatibility)
      - "16686:16686" # UI
      - "14250:14250" # Model.proto
      - "14268:14268" # Jaeger HTTP
      - "14269:14269" # Admin port
    environment:
      #- COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true

  phoenix:
    image: arizephoenix/phoenix:latest
    ports:
      - "4317:4317"
      - "6006:6006"    # Phoenix UI
    environment:
      - PHOENIX_AUTH_ENABLED=false  # Disable auth for local development
      - PHOENIX_OTLP_ENDPOINT=jaeger:4317  # Connect to Jaeger OTLP endpoint
      - PHOENIX_TRACE_ENABLED=true         # Enable tracing
    depends_on:
      - jaeger

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=hray
      - POSTGRES_USER=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the init script
    command: ["postgres"]  # Simplified command as initialization is handled by docker-entrypoint-initdb.d
    depends_on:
      - jaeger

volumes:
  postgres_data:
    driver: local
